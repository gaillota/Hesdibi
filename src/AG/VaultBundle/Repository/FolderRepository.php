<?php

namespace AG\VaultBundle\Repository;

use AG\UserBundle\Entity\User;
use AG\VaultBundle\Entity\Folder;
use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Query\Expr\Join;

/**
 * FolderRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class FolderRepository extends EntityRepository
{
    public function findSearch($search, $user)
    {
        $qb = $this->createQueryBuilder('f')
            ->orderBy('f.name', 'ASC')
            ->where('f.owner = :user')
            ->setParameter('user', $user)
        ;

        $search = trim($search);
        $words = explode(' ', $search);

        foreach ($words as $key => $word)
        {
            $qb
                ->andWhere(
                    $qb->expr()->like('f.name', ":word$key")
                )
                ->setParameter("word$key", "%$word%")
            ;
        }

        return $qb->getQuery()->getResult();
    }

    /**
     *
     * API custom functions
     *
     */

    public function apiFindAll($user)
    {
        $qb = $this
            ->createQueryBuilder('f')
            ->where('f.owner = :user')
            ->setParameter('user', $user)
            ->orderBy('f.name', 'ASC')
        ;

        return $qb->getQuery()->getArrayResult();
    }

    public function apiFindBy($folder, $user)
    {
        $qb = $this
            ->createQueryBuilder('f')
//            ->innerJoin('f.children', 'c', Join::WITH, 'c.parent = f.id')
//            ->addSelect('COUNT(c.id)')
            ->where('f.parent = :folder')
            ->andWhere('f.owner = :user')
            ->setParameters(array(
                'folder' => $folder,
                'user' => $user
            ))
            ->orderBy('f.name', 'ASC')
        ;

        return $qb->getQuery()->getArrayResult();
    }
}
