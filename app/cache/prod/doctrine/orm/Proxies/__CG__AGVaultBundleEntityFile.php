<?php

namespace Proxies\__CG__\AG\VaultBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class File extends \AG\VaultBundle\Entity\File implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'AG\\VaultBundle\\Entity\\File' . "\0" . 'id', '' . "\0" . 'AG\\VaultBundle\\Entity\\File' . "\0" . 'name', '' . "\0" . 'AG\\VaultBundle\\Entity\\File' . "\0" . 'size', '' . "\0" . 'AG\\VaultBundle\\Entity\\File' . "\0" . 'path', '' . "\0" . 'AG\\VaultBundle\\Entity\\File' . "\0" . 'lastModified', '' . "\0" . 'AG\\VaultBundle\\Entity\\File' . "\0" . 'file', '' . "\0" . 'AG\\VaultBundle\\Entity\\File' . "\0" . 'folder', '' . "\0" . 'AG\\VaultBundle\\Entity\\File' . "\0" . 'owner', '' . "\0" . 'AG\\VaultBundle\\Entity\\File' . "\0" . 'authorizedUsers', '' . "\0" . 'AG\\VaultBundle\\Entity\\File' . "\0" . 'shareLinks', '' . "\0" . 'AG\\VaultBundle\\Entity\\File' . "\0" . 'sendTo');
        }

        return array('__isInitialized__', '' . "\0" . 'AG\\VaultBundle\\Entity\\File' . "\0" . 'id', '' . "\0" . 'AG\\VaultBundle\\Entity\\File' . "\0" . 'name', '' . "\0" . 'AG\\VaultBundle\\Entity\\File' . "\0" . 'size', '' . "\0" . 'AG\\VaultBundle\\Entity\\File' . "\0" . 'path', '' . "\0" . 'AG\\VaultBundle\\Entity\\File' . "\0" . 'lastModified', '' . "\0" . 'AG\\VaultBundle\\Entity\\File' . "\0" . 'file', '' . "\0" . 'AG\\VaultBundle\\Entity\\File' . "\0" . 'folder', '' . "\0" . 'AG\\VaultBundle\\Entity\\File' . "\0" . 'owner', '' . "\0" . 'AG\\VaultBundle\\Entity\\File' . "\0" . 'authorizedUsers', '' . "\0" . 'AG\\VaultBundle\\Entity\\File' . "\0" . 'shareLinks', '' . "\0" . 'AG\\VaultBundle\\Entity\\File' . "\0" . 'sendTo');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (File $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', array($name));

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', array());

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setSize($size)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSize', array($size));

        return parent::setSize($size);
    }

    /**
     * {@inheritDoc}
     */
    public function getSize()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSize', array());

        return parent::getSize();
    }

    /**
     * {@inheritDoc}
     */
    public function setPath($path)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPath', array($path));

        return parent::setPath($path);
    }

    /**
     * {@inheritDoc}
     */
    public function getPath()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPath', array());

        return parent::getPath();
    }

    /**
     * {@inheritDoc}
     */
    public function getWebPath()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWebPath', array());

        return parent::getWebPath();
    }

    /**
     * {@inheritDoc}
     */
    public function setFile($file)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFile', array($file));

        return parent::setFile($file);
    }

    /**
     * {@inheritDoc}
     */
    public function getFile()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFile', array());

        return parent::getFile();
    }

    /**
     * {@inheritDoc}
     */
    public function setFolder(\AG\VaultBundle\Entity\Folder $folder = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFolder', array($folder));

        return parent::setFolder($folder);
    }

    /**
     * {@inheritDoc}
     */
    public function getFolder()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFolder', array());

        return parent::getFolder();
    }

    /**
     * {@inheritDoc}
     */
    public function setOwner(\AG\UserBundle\Entity\User $owner = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOwner', array($owner));

        return parent::setOwner($owner);
    }

    /**
     * {@inheritDoc}
     */
    public function getOwner()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOwner', array());

        return parent::getOwner();
    }

    /**
     * {@inheritDoc}
     */
    public function setLastModified($lastModified)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLastModified', array($lastModified));

        return parent::setLastModified($lastModified);
    }

    /**
     * {@inheritDoc}
     */
    public function getLastModified()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastModified', array());

        return parent::getLastModified();
    }

    /**
     * {@inheritDoc}
     */
    public function setSendTo($sendTo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSendTo', array($sendTo));

        return parent::setSendTo($sendTo);
    }

    /**
     * {@inheritDoc}
     */
    public function getSendTo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSendTo', array());

        return parent::getSendTo();
    }

    /**
     * {@inheritDoc}
     */
    public function addAuthorizedUser(\AG\UserBundle\Entity\User $authorizedUser)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addAuthorizedUser', array($authorizedUser));

        return parent::addAuthorizedUser($authorizedUser);
    }

    /**
     * {@inheritDoc}
     */
    public function removeAuthorizedUser(\AG\UserBundle\Entity\User $authorizedUser)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeAuthorizedUser', array($authorizedUser));

        return parent::removeAuthorizedUser($authorizedUser);
    }

    /**
     * {@inheritDoc}
     */
    public function getAuthorizedUsers()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAuthorizedUsers', array());

        return parent::getAuthorizedUsers();
    }

    /**
     * {@inheritDoc}
     */
    public function addShareLink(\AG\VaultBundle\Entity\ShareLink $shareLinks)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addShareLink', array($shareLinks));

        return parent::addShareLink($shareLinks);
    }

    /**
     * {@inheritDoc}
     */
    public function removeShareLink(\AG\VaultBundle\Entity\ShareLink $shareLinks)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeShareLink', array($shareLinks));

        return parent::removeShareLink($shareLinks);
    }

    /**
     * {@inheritDoc}
     */
    public function getShareLinks()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getShareLinks', array());

        return parent::getShareLinks();
    }

}
